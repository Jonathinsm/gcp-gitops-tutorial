# [START cloudbuild-delivery]
steps:
# Este paso despliega la nueva versión de nuestra imagen de contenador
# en el cluster de Kubernetes.
- name: 'gcr.io/cloud-builders/kubectl'
  id: Deploy
  args:
  - 'apply'
  - '-f'
  - 'kubernetes.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-b'
  - 'CLOUDSDK_CONTAINER_CLUSTER=hello-cloudbuild'

# Este paso copia el manifiesto desplegado a la rama "production"
# COMMIT_SHA es una variable de entorno la cual es reemplazada
# por Cloud Build.
- name: 'gcr.io/cloud-builders/git'
  id: Copy to production branch
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    # Configuración de Git para realizar commit con la cuenta de servicio de Cloud Build
    git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
    # Cambia a la rama "production" y compia el archivo kubernetes.yaml a la rama "cantidate"
    git fetch origin production && git checkout production && \
    git checkout $COMMIT_SHA kubernetes.yaml && \
    # Se realiza el commit de el archivo kubernetes.yaml con el respectivo mensaje
    git commit -m "Manifest from commit $COMMIT_SHA
    $(git log --format=%B -n 1 $COMMIT_SHA)" && \
    # Se realiza el push de los cambios de la rama "production" hacia Cloud Source repositories
    git push origin production
# [END cloudbuild-delivery]
